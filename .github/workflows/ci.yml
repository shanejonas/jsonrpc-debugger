name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Build release
      run: cargo build --release --verbose

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check if version changed
      id: version-check
      run: |
        # Get the current version from Cargo.toml
        CURRENT_VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Check if this version exists on crates.io
        if cargo search jsonrpc-debugger | grep -q "jsonrpc-debugger = \"$CURRENT_VERSION\""; then
          echo "version_exists=true" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION already exists on crates.io"
        else
          echo "version_exists=false" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION is new, will publish"
        fi
    
    - name: Publish to crates.io
      if: steps.version-check.outputs.version_exists == 'false'
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    
    - name: Create GitHub release
      if: steps.version-check.outputs.version_exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-check.outputs.current_version }}
        release_name: Release v${{ steps.version-check.outputs.current_version }}
        body: |
          ## Changes
          
          See the [CHANGELOG](CHANGELOG.md) for details.
          
          ## Installation
          
          ```bash
          cargo install jsonrpc-debugger
          ```
          
          Or install from GitHub:
          
          ```bash
          cargo install --git https://github.com/shanejonas/jsonrpc-debugger
          ```
        draft: false
        prerelease: false 